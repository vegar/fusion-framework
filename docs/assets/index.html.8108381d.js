import{_ as n}from"./_plugin-vue_export-helper.cdc0426e.js";import{o as d,c as r,b as e,a as t,w as o,d as s,e as a,r as c}from"./app.db140541.js";const k={},b=e("div",{class:"custom-container note"},[e("p",{class:"custom-container-title"},"Note"),e("p",null,[s("Some task for planned feature are skipped to meet the dead-line of "),e("strong",null,"Project Portal")])],-1),m={id:"authentication",tabindex:"-1"},h=e("a",{class:"header-anchor",href:"#authentication","aria-hidden":"true"},"#",-1),p=s(" Authentication "),u=a('<p>Core of the <strong>Fusion Framework</strong> is to provide tooling for executing authenticated service requests.</p><p>Developers of the <strong>Fusion platform</strong> should with minimal effort consume <strong>Fusion Services</strong> and provide their own.</p><p>Developers should be able to configure named clients for services. When using the client it should acquire scoped user identity token for the requested endpoint.</p><p>The client should also internally expose requests and responses, which can be managed from the portal (example telemetry, custom headers)</p><blockquote><p>initial modules for moving from ADAL to MSAL</p></blockquote><ul class="task-list-container"><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-0" checked="checked" disabled="disabled"><label class="task-list-item-label" for="task-item-0"> configure and create http clients</label></li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-1" checked="checked" disabled="disabled"><label class="task-list-item-label" for="task-item-1"> MSAL authentication</label></li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-2" checked="checked" disabled="disabled"><label class="task-list-item-label" for="task-item-2"><a href="../modules/http">documentation</a></label></li></ul>',6),f={id:"foundation",tabindex:"-1"},x=e("a",{class:"header-anchor",href:"#foundation","aria-hidden":"true"},"#",-1),g=s(" Foundation "),_=a("<p><strong>Fusion Framework</strong> is buildt on a modular design.</p><blockquote><p>Functionality for apps and portals composed together by small building block called modules</p><p>The framework provides essential modules, but developers can pick or create additional modules needed.</p></blockquote><p><strong>Fusion Framework</strong> provides scoped functionality.</p><blockquote><p>Each collection module instances has their own <em>sandbox</em> to not pollute other applications.</p><p>When a applications is ejected, all facilitated functionality is disposed.</p></blockquote><p><strong>Fusion Framework Modules</strong> are independent and should be interchangeable.</p><blockquote><p><strong>Example:</strong> if the technology for authentication changes, only the authentication module should be replaced.</p></blockquote><p><strong>Fusion Framework</strong> is ecosystem independent.</p><blockquote><p>Written in plain TypeScript for future upgrade of libraries or platforms</p><p>Tooling for easy development on React</p></blockquote><p><strong>Fusion Framework</strong> is the foundation of applications</p><blockquote><p><code>build once, run anywhere</code>, <strong>Fusion Apps</strong> should run on any host(portal).</p><p>developers can focus more on UI, framework handles complexity</p></blockquote>",10),y=s("read more"),v=a('<ul class="task-list-container"><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-3" checked="checked" disabled="disabled"><label class="task-list-item-label" for="task-item-3"> create functionality for adding, configuring and initializing modules.</label></li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-4" checked="checked" disabled="disabled"><label class="task-list-item-label" for="task-item-4"> create interface with collection of essential modules (app and portal)</label></li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-5" checked="checked" disabled="disabled"><label class="task-list-item-label" for="task-item-5"> add type-hinting for working with framework in IDE</label></li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-6" checked="checked" disabled="disabled"><label class="task-list-item-label" for="task-item-6"> tooling for <code>React</code></label></li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-7" checked="checked" disabled="disabled"><label class="task-list-item-label" for="task-item-7"> documentation</label></li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-8" checked="checked" disabled="disabled"><label class="task-list-item-label" for="task-item-8"> guide</label></li></ul>',1),w={id:"service-discovery",tabindex:"-1"},F=e("a",{class:"header-anchor",href:"#service-discovery","aria-hidden":"true"},"#",-1),q=s(" Service Discovery "),C=a('<p>Applications relay on data from <strong>Fusion</strong> services and the <strong>Framework</strong> should dynamically resolve these base on the environment they are hosted on.</p><p>Developers should easily configure which services the application needs and maintainers see which one are used.</p><blockquote><p>developers should only name the service, then the framework resolves the endpoint and authentication requirements</p></blockquote><ul class="task-list-container"><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-9" checked="checked" disabled="disabled"><label class="task-list-item-label" for="task-item-9"> create a module which resolves <code>http</code> clients</label></li></ul>',4),R={id:"events",tabindex:"-1"},T=e("a",{class:"header-anchor",href:"#events","aria-hidden":"true"},"#",-1),A=s(" Events "),Q=e("p",null,[s("Since modules are decoupled, the "),e("strong",null,"Framework"),s(" needs a buss to communicate on.")],-1),D=e("blockquote",null,[e("p",null,"events should be asynchronously when flagged as cancelable")],-1),S={class:"task-list-container"},L=e("li",{class:"task-list-item"},[e("input",{type:"checkbox",class:"task-list-item-checkbox",id:"task-item-10",checked:"checked",disabled:"disabled"}),e("label",{class:"task-list-item-label",for:"task-item-10"}," create a module for consuming context")],-1),M={class:"task-list-item"},B=e("input",{type:"checkbox",class:"task-list-item-checkbox",id:"task-item-11",checked:"checked",disabled:"disabled"},null,-1),N={class:"task-list-item-label",for:"task-item-11"},P=s("documentation"),W=e("li",{class:"task-list-item"},[e("input",{type:"checkbox",class:"task-list-item-checkbox",id:"task-item-12",checked:"checked",disabled:"disabled"}),e("label",{class:"task-list-item-label",for:"task-item-12"},[s(" tooling for "),e("code",null,"React")])],-1),E={id:"context",tabindex:"-1"},I=e("a",{class:"header-anchor",href:"#context","aria-hidden":"true"},"#",-1),G=s(" Context "),V=a('<p>Many <strong>Fusion</strong> applications are centered around a context and a part of the workflow for providing scoped data to the application.</p><p>The framework needs to facilitate query, filtering and selecting context.</p><blockquote><p>The framework maintains the cache of context, aborts dangling request and throttles queries</p></blockquote><p>It will also notify when the current context changes.</p><p><img src="https://img.shields.io/github/milestones/progress-percent/equinor/fusion-framework/1" alt="GitHub milestone"></p><ul class="task-list-container"><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-13" checked="checked" disabled="disabled"><label class="task-list-item-label" for="task-item-13"> create a module for consuming context</label></li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-14" disabled="disabled"><label class="task-list-item-label" for="task-item-14"> update context handling in <strong>Fusion Portal</strong></label></li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-15" checked="checked" disabled="disabled"><label class="task-list-item-label" for="task-item-15"><a href="../modules/services/context">documentation</a></label></li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-16" checked="checked" disabled="disabled"><label class="task-list-item-label" for="task-item-16"> tooling for <code>React</code></label></li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-17" disabled="disabled"><label class="task-list-item-label" for="task-item-17"> guide</label></li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-18" disabled="disabled"><label class="task-list-item-label" for="task-item-18"> cookbook</label></li></ul>',6),j={id:"application-loading",tabindex:"-1"},z=e("a",{class:"header-anchor",href:"#application-loading","aria-hidden":"true"},"#",-1),H=s(" Application Loading "),O=a('<p><strong>Fusion</strong> provides metadata about registered applications and configuration for runtime environment. When loading an application the <strong>Framework</strong> resolves and provides this information, which the application uses to dynamically configure before rending.</p><p>The framework also keeps track of selected application and notifies when when current application changes.</p><ul class="task-list-container"><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-19" checked="checked" disabled="disabled"><label class="task-list-item-label" for="task-item-19"> load application and keep track of selected</label></li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-20" checked="checked" disabled="disabled"><label class="task-list-item-label" for="task-item-20"> tooling for <code>React</code></label></li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-21" disabled="disabled"><label class="task-list-item-label" for="task-item-21"> developer documentation</label></li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-22" disabled="disabled"><label class="task-list-item-label" for="task-item-22"> developer guide</label></li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-23" disabled="disabled"><label class="task-list-item-label" for="task-item-23"> cookbook for loading applications</label></li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-24" disabled="disabled"><label class="task-list-item-label" for="task-item-24"><em>track usage (awaiting new service)</em></label></li></ul>',3),U={id:"bookmarks",tabindex:"-1"},J=e("a",{class:"header-anchor",href:"#bookmarks","aria-hidden":"true"},"#",-1),K=s(" Bookmarks "),X=a('<p>Bookmarks are snapshots of application states which users can navigate to and share with other Fusion users. The framework should facilitate functionality for storing and restoring bookmark.</p><ul class="task-list-container"><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-25" checked="checked" disabled="disabled"><label class="task-list-item-label" for="task-item-25"> configurable interface for storing and restoring bookmarks</label></li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-26" disabled="disabled"><label class="task-list-item-label" for="task-item-26"> tooling for <code>React</code></label></li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-27" disabled="disabled"><label class="task-list-item-label" for="task-item-27"> Cookbook for developing bookmarks</label></li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-28" disabled="disabled"><label class="task-list-item-label" for="task-item-28"> Developer documentation</label></li></ul>',2),Y={id:"widgets",tabindex:"-1"},Z=e("a",{class:"header-anchor",href:"#widgets","aria-hidden":"true"},"#",-1),$=s(" Widgets "),ee=a('<p>Widgets are small applications which are uploaded to an global storage and consumed by portals. The framework should manage loading metadata and configuration for the widget.</p><ul class="task-list-container"><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-29" disabled="disabled"><label class="task-list-item-label" for="task-item-29"> Load widget manifest and configuration</label></li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-30" disabled="disabled"><label class="task-list-item-label" for="task-item-30"> tooling for <code>React</code></label></li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-31" disabled="disabled"><label class="task-list-item-label" for="task-item-31"> Documentation</label></li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-32" disabled="disabled"><label class="task-list-item-label" for="task-item-32"> Guide</label></li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-33" disabled="disabled"><label class="task-list-item-label" for="task-item-33"> Cookbook</label></li></ul>',2),te={id:"application-migration",tabindex:"-1"},se=e("a",{class:"header-anchor",href:"#application-migration","aria-hidden":"true"},"#",-1),ie=s(" Application migration "),ae=a('<p><strong>Q4 2022</strong></p><p>Convert existing application to be compatible with dynamic loading and configuration of framework</p><ul class="task-list-container"><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-34" disabled="disabled"><label class="task-list-item-label" for="task-item-34"> create build template for building application</label></li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-35" disabled="disabled"><label class="task-list-item-label" for="task-item-35"> create a wrapper for emulating portal in development</label></li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-36" disabled="disabled"><label class="task-list-item-label" for="task-item-36"> create guide for making application compliant with <code>Fusion Framework</code></label></li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-37" disabled="disabled"><label class="task-list-item-label" for="task-item-37"> make Fusion Portal compliant with <code>React 18</code></label></li></ul><h1 id="not-planned-yet" tabindex="-1"><a class="header-anchor" href="#not-planned-yet" aria-hidden="true">#</a> Not planned yet</h1><h2 id="telemetry" tabindex="-1"><a class="header-anchor" href="#telemetry" aria-hidden="true">#</a> Telemetry</h2><p>Observer events happening in the framework an log back to application insight</p><blockquote><p>This module exists but missing wiring and final touches</p></blockquote><ul class="task-list-container"><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-38" disabled="disabled"><label class="task-list-item-label" for="task-item-38"> subscribe to framework events</label></li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-39" disabled="disabled"><label class="task-list-item-label" for="task-item-39"> tooling for <code>React</code></label></li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-40" disabled="disabled"><label class="task-list-item-label" for="task-item-40"> Documentation</label></li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-41" disabled="disabled"><label class="task-list-item-label" for="task-item-41"> Guide</label></li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-42" disabled="disabled"><label class="task-list-item-label" for="task-item-42"> Cookbook</label></li></ul><h2 id="service-messages" tabindex="-1"><a class="header-anchor" href="#service-messages" aria-hidden="true">#</a> Service Messages</h2><p>Module for subscribing to <strong>Fusion</strong> service messages (SignalR)</p><ul class="task-list-container"><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-43" disabled="disabled"><label class="task-list-item-label" for="task-item-43"> tooling for <code>React</code></label></li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-44" disabled="disabled"><label class="task-list-item-label" for="task-item-44"> Documentation</label></li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-45" disabled="disabled"><label class="task-list-item-label" for="task-item-45"> Guide</label></li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-46" disabled="disabled"><label class="task-list-item-label" for="task-item-46"> Cookbook</label></li></ul><h2 id="person" tabindex="-1"><a class="header-anchor" href="#person" aria-hidden="true">#</a> Person</h2><p>Module for resolving persons (person-card, person-picker, person-avatar, person-availability)</p><h2 id="application-cli" tabindex="-1"><a class="header-anchor" href="#application-cli" aria-hidden="true">#</a> Application CLI</h2><p>Create a CLI for building and developing application</p>',15);function le(oe,ce){const i=c("Badge"),l=c("RouterLink");return d(),r("div",null,[e("ul",null,[e("li",null,[t(i,{type:"tip",text:"Complete"})]),e("li",null,[t(i,{type:"warning",text:"Minimum viable product"})]),e("li",null,[t(i,{type:"info",text:"Active - Currently working on"})]),e("li",null,[t(i,{type:"note",text:"Planned - not started on"})])]),b,e("h2",m,[h,p,t(i,{type:"tip",text:"Q1 2022"})]),u,e("h2",f,[x,g,t(i,{type:"tip",text:"Q2 2022"})]),_,e("p",null,[t(l,{to:"/modules/"},{default:o(()=>[y]),_:1})]),v,e("h2",w,[F,q,t(i,{type:"tip",text:"Q2/Q3 2022"})]),C,e("h2",R,[T,A,t(i,{type:"tip",text:"Q3 2022"})]),Q,D,e("ul",S,[L,e("li",M,[B,e("label",N,[t(l,{to:"/modules/event/"},{default:o(()=>[P]),_:1})])]),W]),e("h2",E,[I,G,t(i,{type:"warning",text:"Q3 2022"})]),V,e("h2",j,[z,H,t(i,{type:"info",text:"Q4 2022"})]),O,e("h2",U,[J,K,t(i,{type:"info",text:"Q4 2022"})]),X,e("h2",Y,[Z,$,t(i,{type:"note",text:"Q4 2022"})]),ee,e("h2",te,[se,ie,t(i,{type:"note",text:"Q4 2022"})]),ae])}const re=n(k,[["render",le],["__file","index.html.vue"]]);export{re as default};
