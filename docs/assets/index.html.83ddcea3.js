import{_ as d}from"./_plugin-vue_export-helper.cdc0426e.js";import{o as n,c as k,b as e,a as s,d as t,w as o,e as a,r as c}from"./app.22f00ef5.js";const r={},b=e("div",{class:"custom-container note"},[e("p",{class:"custom-container-title"},"Note"),e("p",null,[t("Some task for planned feature are skipped to meet the dead-line of "),e("strong",null,"Project Portal")])],-1),m={id:"authentication",tabindex:"-1"},h=e("a",{class:"header-anchor",href:"#authentication","aria-hidden":"true"},"#",-1),p=a('<p>Core of the <strong>Fusion Framework</strong> is to provide tooling for executing authenticated service requests.</p><p>Developers of the <strong>Fusion platform</strong> should with minimal effort consume <strong>Fusion Services</strong> and provide their own.</p><p>Developers should be able to configure named clients for services. When using the client it should acquire scoped user identity token for the requested endpoint.</p><p>The client should also internally expose requests and responses, which can be managed from the portal (example telemetry, custom headers)</p><blockquote><p>initial modules for moving from ADAL to MSAL</p></blockquote><ul class="task-list-container"><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-0" checked="checked" disabled="disabled"><label class="task-list-item-label" for="task-item-0"> configure and create http clients</label></li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-1" checked="checked" disabled="disabled"><label class="task-list-item-label" for="task-item-1"> MSAL authentication</label></li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-2" checked="checked" disabled="disabled"><label class="task-list-item-label" for="task-item-2"><a href="../modules/http">documentation</a></label></li></ul>',6),u={id:"foundation",tabindex:"-1"},f=e("a",{class:"header-anchor",href:"#foundation","aria-hidden":"true"},"#",-1),g=a("<p><strong>Fusion Framework</strong> is buildt on a modular design.</p><blockquote><p>Functionality for apps and portals composed together by small building block called modules</p><p>The framework provides essential modules, but developers can pick or create additional modules needed.</p></blockquote><p><strong>Fusion Framework</strong> provides scoped functionality.</p><blockquote><p>Each collection module instances has their own <em>sandbox</em> to not pollute other applications.</p><p>When a applications is ejected, all facilitated functionality is disposed.</p></blockquote><p><strong>Fusion Framework Modules</strong> are independent and should be interchangeable.</p><blockquote><p><strong>Example:</strong> if the technology for authentication changes, only the authentication module should be replaced.</p></blockquote><p><strong>Fusion Framework</strong> is ecosystem independent.</p><blockquote><p>Written in plain TypeScript for future upgrade of libraries or platforms</p><p>Tooling for easy development on React</p></blockquote><p><strong>Fusion Framework</strong> is the foundation of applications</p><blockquote><p><code>build once, run anywhere</code>, <strong>Fusion Apps</strong> should run on any host(portal).</p><p>developers can focus more on UI, framework handles complexity</p></blockquote>",10),x={class:"task-list-container"},_=a('<li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-3" checked="checked" disabled="disabled"><label class="task-list-item-label" for="task-item-3"> create functionality for adding, configuring and initializing modules.</label></li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-4" checked="checked" disabled="disabled"><label class="task-list-item-label" for="task-item-4"> create interface with collection of essential modules (app and portal)</label></li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-5" checked="checked" disabled="disabled"><label class="task-list-item-label" for="task-item-5"> add type-hinting for working with framework in IDE</label></li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-6" checked="checked" disabled="disabled"><label class="task-list-item-label" for="task-item-6"> tooling for <code>React</code></label></li>',4),y={class:"task-list-item"},v=e("input",{type:"checkbox",class:"task-list-item-checkbox",id:"task-item-7",checked:"checked",disabled:"disabled"},null,-1),w={class:"task-list-item-label",for:"task-item-7"},F=e("li",{class:"task-list-item"},[e("input",{type:"checkbox",class:"task-list-item-checkbox",id:"task-item-8",checked:"checked",disabled:"disabled"}),e("label",{class:"task-list-item-label",for:"task-item-8"}," guide")],-1),q={id:"service-discovery",tabindex:"-1"},C=e("a",{class:"header-anchor",href:"#service-discovery","aria-hidden":"true"},"#",-1),A=e("p",null,[t("Applications consumes data from "),e("strong",null,"Fusion"),t(" services. The "),e("strong",null,"Framework"),t(" should dynamically resolve services from the host portal.")],-1),Q=e("p",null,"Developers should easily configure which services the application needs and maintainers see which one are used.",-1),T=e("blockquote",null,[e("p",null,"developers should only name the service, then the framework resolves the endpoint and authentication requirements")],-1),R={class:"task-list-container"},L=a('<li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-9" checked="checked" disabled="disabled"><label class="task-list-item-label" for="task-item-9"> create a module which resolves <code>http</code> clients</label></li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-10" checked="checked" disabled="disabled"><label class="task-list-item-label" for="task-item-10"> tooling for <code>React</code></label></li>',2),D={class:"task-list-item"},S=e("input",{type:"checkbox",class:"task-list-item-checkbox",id:"task-item-11",checked:"checked",disabled:"disabled"},null,-1),G={class:"task-list-item-label",for:"task-item-11"},I=a('<li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-12" disabled="disabled"><label class="task-list-item-label" for="task-item-12"> guide</label></li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-13" disabled="disabled"><label class="task-list-item-label" for="task-item-13"> cookbook</label></li>',2),N={id:"ag-grid",tabindex:"-1"},B=e("a",{class:"header-anchor",href:"#ag-grid","aria-hidden":"true"},"#",-1),E=e("p",null,[t("Allow application to register "),e("code",null,"AgGrid"),t(" license for removing watermark.")],-1),M={class:"task-list-container"},P={class:"task-list-item"},W=e("input",{type:"checkbox",class:"task-list-item-checkbox",id:"task-item-14",checked:"checked",disabled:"disabled"},null,-1),V={class:"task-list-item-label",for:"task-item-14"},H=a('<li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-15" checked="checked" disabled="disabled"><label class="task-list-item-label" for="task-item-15"> guide</label></li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-16" disabled="disabled"><label class="task-list-item-label" for="task-item-16"> cookbook</label></li>',2),j={id:"events",tabindex:"-1"},z=e("a",{class:"header-anchor",href:"#events","aria-hidden":"true"},"#",-1),O=e("p",null,[t("Since modules are decoupled, the "),e("strong",null,"Framework"),t(" needs a bus to communicate on.")],-1),U=e("blockquote",null,[e("p",null,"Application can interact with events and prevent default behaviors")],-1),J={class:"task-list-container"},K=a('<li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-17" checked="checked" disabled="disabled"><label class="task-list-item-label" for="task-item-17"> create a module for consuming context</label></li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-18" checked="checked" disabled="disabled"><label class="task-list-item-label" for="task-item-18"> tooling for <code>React</code></label></li>',2),X={class:"task-list-item"},Y=e("input",{type:"checkbox",class:"task-list-item-checkbox",id:"task-item-19",checked:"checked",disabled:"disabled"},null,-1),Z={class:"task-list-item-label",for:"task-item-19"},$=a('<li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-20" disabled="disabled"><label class="task-list-item-label" for="task-item-20"> guide</label></li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-21" disabled="disabled"><label class="task-list-item-label" for="task-item-21"> cookbook</label></li>',2),ee={id:"context",tabindex:"-1"},te=e("a",{class:"header-anchor",href:"#context","aria-hidden":"true"},"#",-1),se=a('<p><strong>Fusion</strong> context is scoped data with user-friendly name and follows users throughout session.</p><p>Applications present the user with a interface related the to selected context.</p><p>The framework needs to facilitate query, filtering and selecting scoped data.</p><blockquote><p>The framework maintains the cache of context, aborts dangling request and throttles queries</p></blockquote><p><img src="https://img.shields.io/github/milestones/progress-percent/equinor/fusion-framework/1" alt="GitHub milestone"></p><ul class="task-list-container"><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-22" checked="checked" disabled="disabled"><label class="task-list-item-label" for="task-item-22"> create a module for consuming context</label></li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-23" disabled="disabled"><label class="task-list-item-label" for="task-item-23"> update context handling in <strong>Fusion Portal</strong></label></li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-24" checked="checked" disabled="disabled"><label class="task-list-item-label" for="task-item-24"><a href="../modules/services/context">documentation</a></label></li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-25" checked="checked" disabled="disabled"><label class="task-list-item-label" for="task-item-25"> tooling for <code>React</code></label></li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-26" disabled="disabled"><label class="task-list-item-label" for="task-item-26"> guide</label></li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-27" disabled="disabled"><label class="task-list-item-label" for="task-item-27"> cookbook</label></li></ul>',6),ie={id:"application-loading",tabindex:"-1"},ae=e("a",{class:"header-anchor",href:"#application-loading","aria-hidden":"true"},"#",-1),le=a('<p><strong>Fusion</strong> provides metadata about registered applications and configuration for runtime environment. When loading an application the <strong>Framework</strong> resolves and provides this information, which the application uses to dynamically configure before rending.</p><p>The framework also keeps track of selected application and notifies when when current application changes.</p><ul class="task-list-container"><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-28" checked="checked" disabled="disabled"><label class="task-list-item-label" for="task-item-28"> load application and keep track of selected</label></li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-29" checked="checked" disabled="disabled"><label class="task-list-item-label" for="task-item-29"> tooling for <code>React</code></label></li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-30" disabled="disabled"><label class="task-list-item-label" for="task-item-30"> developer documentation</label></li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-31" disabled="disabled"><label class="task-list-item-label" for="task-item-31"> developer guide</label></li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-32" checked="checked" disabled="disabled"><label class="task-list-item-label" for="task-item-32"> cookbook for loading applications</label></li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-33" disabled="disabled"><label class="task-list-item-label" for="task-item-33"><em>track usage (awaiting new service)</em></label></li></ul>',3),oe={id:"bookmarks",tabindex:"-1"},ce=e("a",{class:"header-anchor",href:"#bookmarks","aria-hidden":"true"},"#",-1),de=a('<p>Bookmarks are snapshots of application states which users can navigate to and share with other Fusion users. The framework should facilitate functionality for storing and restoring bookmark.</p><ul class="task-list-container"><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-34" checked="checked" disabled="disabled"><label class="task-list-item-label" for="task-item-34"> configurable interface for storing and restoring bookmarks</label></li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-35" disabled="disabled"><label class="task-list-item-label" for="task-item-35"> tooling for <code>React</code></label></li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-36" disabled="disabled"><label class="task-list-item-label" for="task-item-36"> Cookbook for developing bookmarks</label></li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-37" disabled="disabled"><label class="task-list-item-label" for="task-item-37"> Developer documentation</label></li></ul>',2),ne={id:"widgets",tabindex:"-1"},ke=e("a",{class:"header-anchor",href:"#widgets","aria-hidden":"true"},"#",-1),re=a('<p>Widgets are small applications which are uploaded to an global storage and consumed by portals and applications. The framework should manage loading metadata and configuration for the widget.</p><ul class="task-list-container"><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-38" disabled="disabled"><label class="task-list-item-label" for="task-item-38"> Load widget manifest and configuration</label></li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-39" disabled="disabled"><label class="task-list-item-label" for="task-item-39"> tooling for <code>React</code></label></li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-40" disabled="disabled"><label class="task-list-item-label" for="task-item-40"> Documentation</label></li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-41" disabled="disabled"><label class="task-list-item-label" for="task-item-41"> Guide</label></li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-42" disabled="disabled"><label class="task-list-item-label" for="task-item-42"> Cookbook</label></li></ul>',2),be={id:"application-migration",tabindex:"-1"},me=e("a",{class:"header-anchor",href:"#application-migration","aria-hidden":"true"},"#",-1),he=a('<p><strong>Q4 2022</strong></p><p>Convert existing application to be compatible with dynamic loading and configuration of framework</p><ul class="task-list-container"><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-43" disabled="disabled"><label class="task-list-item-label" for="task-item-43"> create build template for building application</label></li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-44" disabled="disabled"><label class="task-list-item-label" for="task-item-44"> create a wrapper for emulating portal in development</label></li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-45" disabled="disabled"><label class="task-list-item-label" for="task-item-45"> create guide for making application compliant with <code>Fusion Framework</code></label></li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-46" disabled="disabled"><label class="task-list-item-label" for="task-item-46"> make Fusion Portal compliant with <code>React 18</code></label></li></ul>',3),pe={id:"navigation",tabindex:"-1"},ue=e("a",{class:"header-anchor",href:"#navigation","aria-hidden":"true"},"#",-1),fe=a('<p><strong>Q4 2022</strong></p><p>The <strong>Framework</strong> should provide functionality for applications and portals for navigating.</p><p><img src="https://img.shields.io/github/milestones/progress-percent/equinor/fusion-framework/7" alt="GitHub milestone"></p><ul class="task-list-container"><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-47" checked="checked" disabled="disabled"><label class="task-list-item-label" for="task-item-47"> create functionality for building scoped urls</label></li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-48" checked="checked" disabled="disabled"><label class="task-list-item-label" for="task-item-48"> create module for creating router</label></li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-49" disabled="disabled"><label class="task-list-item-label" for="task-item-49"> create documentation</label></li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-50" disabled="disabled"><label class="task-list-item-label" for="task-item-50"> observe changes to routing</label></li></ul>',4),ge={id:"application-cli",tabindex:"-1"},xe=e("a",{class:"header-anchor",href:"#application-cli","aria-hidden":"true"},"#",-1),_e=a('<p><strong>Q4 2022</strong></p><p>Create a CLI for building and developing application</p><p><img src="https://img.shields.io/github/milestones/progress-percent/equinor/fusion-framework/4" alt="GitHub milestone"></p><ul class="task-list-container"><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-51" checked="checked" disabled="disabled"><label class="task-list-item-label" for="task-item-51"> create a CLI for developing application</label></li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-52" disabled="disabled"><label class="task-list-item-label" for="task-item-52"> create application builder</label></li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-53" checked="checked" disabled="disabled"><label class="task-list-item-label" for="task-item-53"> create proxy-server for emulating portal (manifest, config)</label></li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-54" checked="checked" disabled="disabled"><label class="task-list-item-label" for="task-item-54"> add routing to CLI portal</label></li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-55" disabled="disabled"><label class="task-list-item-label" for="task-item-55"> add <strong>context</strong> selector and provider to CLI portal</label></li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-56" disabled="disabled"><label class="task-list-item-label" for="task-item-56"> add <strong>person</strong> provider to CLI portal</label></li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-57" disabled="disabled"><label class="task-list-item-label" for="task-item-57"> support configuration of portal framework (auth and service discovery)</label></li></ul><h1 id="not-planned-yet" tabindex="-1"><a class="header-anchor" href="#not-planned-yet" aria-hidden="true">#</a> Not planned yet</h1>',5),ye={id:"tasks",tabindex:"-1"},ve=e("a",{class:"header-anchor",href:"#tasks","aria-hidden":"true"},"#",-1),we=e("p",null,"Exposes users Fusion tasks/actions",-1),Fe={id:"notification",tabindex:"-1"},qe=e("a",{class:"header-anchor",href:"#notification","aria-hidden":"true"},"#",-1),Ce=a('<p>Exposes users Fusion notifications</p><h2 id="telemetry" tabindex="-1"><a class="header-anchor" href="#telemetry" aria-hidden="true">#</a> Telemetry</h2><p>Observer events happening in the framework an log back to application insight</p><blockquote><p>This module exists but missing wiring and final touches</p></blockquote><ul class="task-list-container"><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-58" disabled="disabled"><label class="task-list-item-label" for="task-item-58"> subscribe to framework events</label></li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-59" disabled="disabled"><label class="task-list-item-label" for="task-item-59"> tooling for <code>React</code></label></li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-60" disabled="disabled"><label class="task-list-item-label" for="task-item-60"> Documentation</label></li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-61" disabled="disabled"><label class="task-list-item-label" for="task-item-61"> Guide</label></li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-62" disabled="disabled"><label class="task-list-item-label" for="task-item-62"> Cookbook</label></li></ul>',5),Ae={id:"service-messages",tabindex:"-1"},Qe=e("a",{class:"header-anchor",href:"#service-messages","aria-hidden":"true"},"#",-1),Te=a('<p>Module for subscribing to <strong>Fusion</strong> service messages (SignalR)</p><ul class="task-list-container"><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-63" disabled="disabled"><label class="task-list-item-label" for="task-item-63"> tooling for <code>React</code></label></li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-64" disabled="disabled"><label class="task-list-item-label" for="task-item-64"> Documentation</label></li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-65" disabled="disabled"><label class="task-list-item-label" for="task-item-65"> Guide</label></li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-66" disabled="disabled"><label class="task-list-item-label" for="task-item-66"> Cookbook</label></li></ul>',2),Re={id:"person",tabindex:"-1"},Le=e("a",{class:"header-anchor",href:"#person","aria-hidden":"true"},"#",-1),De=e("p",null,"Module for resolving persons (person-card, person-picker, person-avatar, person-availability)",-1),Se={id:"dynatrace",tabindex:"-1"},Ge=e("a",{class:"header-anchor",href:"#dynatrace","aria-hidden":"true"},"#",-1);function Ie(Ne,Be){const i=c("Badge"),l=c("RouterLink");return n(),k("div",null,[e("ul",null,[e("li",null,[s(i,{type:"tip",text:"Complete"})]),e("li",null,[s(i,{type:"warning",text:"Minimum viable product"})]),e("li",null,[s(i,{type:"info",text:"Active - Currently working on"})]),e("li",null,[s(i,{type:"note",text:"Planned - not started on"})])]),b,e("h2",m,[h,t(" Authentication "),s(i,{type:"tip",text:"Q1 2022"})]),p,e("h2",u,[f,t(" Foundation "),s(i,{type:"tip",text:"Q2 2022"})]),g,e("ul",x,[_,e("li",y,[v,e("label",w,[s(l,{to:"/modules/"},{default:o(()=>[t("documentation")]),_:1})])]),F]),e("h2",q,[C,t(" Service Discovery "),s(i,{type:"warning",text:"Q2/Q3 2022"})]),A,Q,T,e("ul",R,[L,e("li",D,[S,e("label",G,[s(l,{to:"/modules/service-discovery/"},{default:o(()=>[t("documentation")]),_:1})])]),I]),e("h2",N,[B,t(" Ag Grid "),s(i,{type:"tip",text:"Q3 2022"})]),E,e("ul",M,[e("li",P,[W,e("label",V,[s(l,{to:"/modules/ag-grid/"},{default:o(()=>[t("documentation")]),_:1})])]),H]),e("h2",j,[z,t(" Events "),s(i,{type:"warning",text:"Q3 2022"})]),O,U,e("ul",J,[K,e("li",X,[Y,e("label",Z,[s(l,{to:"/modules/event/"},{default:o(()=>[t("documentation")]),_:1})])]),$]),e("h2",ee,[te,t(" Context "),s(i,{type:"warning",text:"Q3 2022"})]),se,e("h2",ie,[ae,t(" Application Loading "),s(i,{type:"info",text:"Q4 2022"})]),le,e("h2",oe,[ce,t(" Bookmarks "),s(i,{type:"info",text:"Q4 2022"})]),de,e("h2",ne,[ke,t(" Widgets "),s(i,{type:"note",text:"Q4 2022"})]),re,e("h2",be,[me,t(" Application migration "),s(i,{type:"note",text:"Q4 2022"})]),he,e("h2",pe,[ue,t(" Navigation "),s(i,{type:"info",text:"Q4 2022"})]),fe,e("h2",ge,[xe,t(" Application CLI "),s(i,{type:"info",text:"Q4 2022"})]),_e,e("h2",ye,[ve,t(" Tasks "),s(i,{type:"warning",text:"need grooming"})]),we,e("h2",Fe,[qe,t(" Notification "),s(i,{type:"warning",text:"need grooming"})]),Ce,e("h2",Ae,[Qe,t(" Service Messages "),s(i,{type:"warning",text:"need grooming"})]),Te,e("h2",Re,[Le,t(" Person "),s(i,{type:"warning",text:"need grooming"})]),De,e("h2",Se,[Ge,t(" Dynatrace "),s(i,{type:"warning",text:"need grooming"})])])}const Pe=d(r,[["render",Ie],["__file","index.html.vue"]]);export{Pe as default};
