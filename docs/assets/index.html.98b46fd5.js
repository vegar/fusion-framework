import{_ as r}from"./_plugin-vue_export-helper.cdc0426e.js";import{o as d,c as g,a as s,w as o,b as n,d as a,e,r as t}from"./app.42624c8d.js";const x={},f=n("h2",{id:"configuration",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#configuration","aria-hidden":"true"},"#"),a(" Configuration")],-1),h=n("div",{class:"language-typescript","data-ext":"ts"},[n("pre",{class:"language-typescript"},[n("code",null,[n("span",{class:"token keyword"},"import"),a(),n("span",{class:"token punctuation"},"{"),a(" enableContext "),n("span",{class:"token punctuation"},"}"),a(),n("span",{class:"token keyword"},"from"),a(),n("span",{class:"token string"},"'@equinor/fusion-framework-module-context'"),n("span",{class:"token punctuation"},";"),a(`
`)])])],-1),m=n("div",{class:"language-typescript","data-ext":"ts"},[n("pre",{class:"language-typescript"},[n("code",null,[n("span",{class:"token keyword"},"import"),a(),n("span",{class:"token punctuation"},"{"),a(" enableContext "),n("span",{class:"token punctuation"},"}"),a(),n("span",{class:"token keyword"},"from"),a(),n("span",{class:"token string"},"'@equinor/fusion-framework-react-module-context'"),n("span",{class:"token punctuation"},";"),a(`
`)])])],-1),y=e(`<div class="language-typescript" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">configure</span> <span class="token operator">=</span> <span class="token punctuation">(</span>configurator<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token function">enableContext</span><span class="token punctuation">(</span>configurator<span class="token punctuation">,</span> <span class="token punctuation">{</span>
    <span class="token doc-comment comment">/** optional filter for query types */</span>
    contextType<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;project&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token doc-comment comment">/** optional filter of query result */</span>
    <span class="token function-variable function">contextFilter</span><span class="token operator">:</span> <span class="token punctuation">(</span>items<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> items<span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span>item <span class="token operator">=&gt;</span> item<span class="token punctuation">.</span>title<span class="token punctuation">.</span><span class="token function">match</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">a</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">)</span><span class="token punctuation">)</span> 
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div><h3 id="options" tabindex="-1"><a class="header-anchor" href="#options" aria-hidden="true">#</a> Options</h3><h4 id="contexttype" tabindex="-1"><a class="header-anchor" href="#contexttype" aria-hidden="true">#</a> contextType</h4><div class="language-typescript" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">type</span> <span class="token class-name">contextType</span> <span class="token operator">=</span> <span class="token builtin">Array</span><span class="token operator">&lt;</span><span class="token builtin">string</span><span class="token operator">&gt;</span>
</code></pre></div><p>array of context types which queries are filtered by</p><h4 id="contextfilter" tabindex="-1"><a class="header-anchor" href="#contextfilter" aria-hidden="true">#</a> contextFilter</h4><div class="language-typescript" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">type</span> <span class="token class-name">contextFilter</span> <span class="token operator">=</span> <span class="token punctuation">(</span>items<span class="token operator">:</span> <span class="token builtin">Array</span><span class="token operator">&lt;</span>ContextItem<span class="token operator">&gt;</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token builtin">Array</span><span class="token operator">&lt;</span>ContextItem<span class="token operator">&gt;</span>
</code></pre></div><p>query post request processor, called after query is executed</p><h2 id="react" tabindex="-1"><a class="header-anchor" href="#react" aria-hidden="true">#</a> React</h2>`,9),w=n("h3",{id:"example",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#example","aria-hidden":"true"},"#"),a(" Example")],-1),b={href:"https://github.com/equinor/fusion-framework/tree/main/cookbooks/app-react-context/src",target:"_blank",rel:"noopener noreferrer"},v=e(`<h4 id="config-ts" tabindex="-1"><a class="header-anchor" href="#config-ts" aria-hidden="true">#</a> config.ts</h4><div class="language-typescript" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token keyword">type</span> <span class="token punctuation">{</span> AppModuleInitiator <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@equinor/fusion-framework-app&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> enableContext <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@equinor/fusion-framework-react-module-context&#39;</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">const</span> configure<span class="token operator">:</span> <span class="token function-variable function">AppModuleInitiator</span> <span class="token operator">=</span> <span class="token punctuation">(</span>configurator<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token function">enableContext</span><span class="token punctuation">(</span>configurator<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> configure<span class="token punctuation">;</span>
</code></pre></div><h4 id="app-tsx" tabindex="-1"><a class="header-anchor" href="#app-tsx" aria-hidden="true">#</a> App.tsx</h4><div class="language-tsx" data-ext="tsx"><pre class="language-tsx"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> ChangeEvent<span class="token punctuation">,</span> StrictMode<span class="token punctuation">,</span> useCallback <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;react&#39;</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token punctuation">{</span>
    useModuleCurrentContext<span class="token punctuation">,</span>
    useModuleQueryContext<span class="token punctuation">,</span>
<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@equinor/fusion-framework-react-module-context&#39;</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">App</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> <span class="token punctuation">{</span> currentContext<span class="token punctuation">,</span> setCurrentContext <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">useModuleCurrentContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">const</span> <span class="token punctuation">{</span> query<span class="token punctuation">,</span> querying<span class="token punctuation">,</span> value<span class="token operator">:</span> searchResult <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">useModuleQueryContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">const</span> onInputChange <span class="token operator">=</span> <span class="token function">useCallback</span><span class="token punctuation">(</span>
        <span class="token punctuation">(</span>e<span class="token operator">:</span> ChangeEvent<span class="token operator">&lt;</span>HTMLInputElement<span class="token operator">&gt;</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
            <span class="token function">query</span><span class="token punctuation">(</span><span class="token punctuation">{</span> args<span class="token operator">:</span> <span class="token punctuation">{</span> search<span class="token operator">:</span> e<span class="token punctuation">.</span>currentTarget<span class="token punctuation">.</span>value <span class="token punctuation">}</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token punctuation">[</span>query<span class="token punctuation">]</span>
    <span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">const</span> onSelectChange <span class="token operator">=</span> <span class="token function">useCallback</span><span class="token punctuation">(</span>
        <span class="token punctuation">(</span>e<span class="token operator">:</span> ChangeEvent<span class="token operator">&lt;</span>HTMLSelectElement<span class="token operator">&gt;</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
            <span class="token function">setCurrentContext</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span>currentTarget<span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token punctuation">[</span>query<span class="token punctuation">]</span>
    <span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">return</span> <span class="token punctuation">(</span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">StrictMode</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
            </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">React Context App</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
            </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>search<span class="token punctuation">&quot;</span></span> <span class="token attr-name">onChange</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>onInputChange<span class="token punctuation">}</span></span> <span class="token punctuation">/&gt;</span></span><span class="token plain-text">
            </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span> <span class="token punctuation">/&gt;</span></span><span class="token plain-text">
            </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>select</span> <span class="token attr-name">onChange</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>onSelectChange<span class="token punctuation">}</span></span> <span class="token attr-name">disabled</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>querying<span class="token punctuation">}</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
                </span><span class="token punctuation">{</span>searchResult <span class="token operator">&amp;&amp;</span>
                    searchResult<span class="token punctuation">.</span>value<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span>
                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span> <span class="token attr-name">value</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>x<span class="token punctuation">.</span>id<span class="token punctuation">}</span></span> <span class="token attr-name">key</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>x<span class="token punctuation">.</span>id<span class="token punctuation">}</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
                            </span><span class="token punctuation">{</span>x<span class="token punctuation">.</span>title<span class="token punctuation">}</span><span class="token plain-text">
                        </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>option</span><span class="token punctuation">&gt;</span></span>
                    <span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token plain-text">
            </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>select</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
            </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>pre</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">{</span><span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>currentContext<span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>pre</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
        </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">StrictMode</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> App<span class="token punctuation">;</span>
</code></pre></div>`,4);function C(_,q){const p=t("ModuleBadge"),c=t("CodeTabs"),u=t("ExternalLinkIcon");return d(),g("div",null,[s(p,{module:"module-context"}),f,s(c,{id:"5",data:[{title:"poj"},{title:"react"}]},{tab0:o(({title:l,value:i,isActive:k})=>[h]),tab1:o(({title:l,value:i,isActive:k})=>[m]),_:1}),y,s(p,{module:"react-module-context"}),w,n("blockquote",null,[n("p",null,[n("a",b,[a("cookbook -see example"),s(u)])])]),v])}const T=r(x,[["render",C],["__file","index.html.vue"]]);export{T as default};
