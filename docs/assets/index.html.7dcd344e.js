import{_ as n}from"./_plugin-vue_export-helper.cdc0426e.js";import{o as d,c as k,b as e,a as s,w as o,d as t,e as a,r as c}from"./app.b188925e.js";const r={},b=e("div",{class:"custom-container note"},[e("p",{class:"custom-container-title"},"Note"),e("p",null,[t("Some task for planned feature are skipped to meet the dead-line of "),e("strong",null,"Project Portal")])],-1),h={id:"authentication",tabindex:"-1"},m=e("a",{class:"header-anchor",href:"#authentication","aria-hidden":"true"},"#",-1),p=t(" Authentication "),u=a('<p>Core of the <strong>Fusion Framework</strong> is to provide tooling for executing authenticated service requests.</p><p>Developers of the <strong>Fusion platform</strong> should with minimal effort consume <strong>Fusion Services</strong> and provide their own.</p><p>Developers should be able to configure named clients for services. When using the client it should acquire scoped user identity token for the requested endpoint.</p><p>The client should also internally expose requests and responses, which can be managed from the portal (example telemetry, custom headers)</p><blockquote><p>initial modules for moving from ADAL to MSAL</p></blockquote><ul class="task-list-container"><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-0" checked="checked" disabled="disabled"><label class="task-list-item-label" for="task-item-0"> configure and create http clients</label></li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-1" checked="checked" disabled="disabled"><label class="task-list-item-label" for="task-item-1"> MSAL authentication</label></li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-2" checked="checked" disabled="disabled"><label class="task-list-item-label" for="task-item-2"><a href="../modules/http">documentation</a></label></li></ul>',6),f={id:"foundation",tabindex:"-1"},_=e("a",{class:"header-anchor",href:"#foundation","aria-hidden":"true"},"#",-1),g=t(" Foundation "),x=a("<p><strong>Fusion Framework</strong> is buildt on a modular design.</p><blockquote><p>Functionality for apps and portals composed together by small building block called modules</p><p>The framework provides essential modules, but developers can pick or create additional modules needed.</p></blockquote><p><strong>Fusion Framework</strong> provides scoped functionality.</p><blockquote><p>Each collection module instances has their own <em>sandbox</em> to not pollute other applications.</p><p>When a applications is ejected, all facilitated functionality is disposed.</p></blockquote><p><strong>Fusion Framework Modules</strong> are independent and should be interchangeable.</p><blockquote><p><strong>Example:</strong> if the technology for authentication changes, only the authentication module should be replaced.</p></blockquote><p><strong>Fusion Framework</strong> is ecosystem independent.</p><blockquote><p>Written in plain TypeScript for future upgrade of libraries or platforms</p><p>Tooling for easy development on React</p></blockquote><p><strong>Fusion Framework</strong> is the foundation of applications</p><blockquote><p><code>build once, run anywhere</code>, <strong>Fusion Apps</strong> should run on any host(portal).</p><p>developers can focus more on UI, framework handles complexity</p></blockquote>",10),y={class:"task-list-container"},v=a('<li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-3" checked="checked" disabled="disabled"><label class="task-list-item-label" for="task-item-3"> create functionality for adding, configuring and initializing modules.</label></li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-4" checked="checked" disabled="disabled"><label class="task-list-item-label" for="task-item-4"> create interface with collection of essential modules (app and portal)</label></li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-5" checked="checked" disabled="disabled"><label class="task-list-item-label" for="task-item-5"> add type-hinting for working with framework in IDE</label></li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-6" checked="checked" disabled="disabled"><label class="task-list-item-label" for="task-item-6"> tooling for <code>React</code></label></li>',4),w={class:"task-list-item"},F=e("input",{type:"checkbox",class:"task-list-item-checkbox",id:"task-item-7",checked:"checked",disabled:"disabled"},null,-1),q={class:"task-list-item-label",for:"task-item-7"},T=t("documentation"),C=e("li",{class:"task-list-item"},[e("input",{type:"checkbox",class:"task-list-item-checkbox",id:"task-item-8",checked:"checked",disabled:"disabled"}),e("label",{class:"task-list-item-label",for:"task-item-8"}," guide")],-1),R={id:"service-discovery",tabindex:"-1"},A=e("a",{class:"header-anchor",href:"#service-discovery","aria-hidden":"true"},"#",-1),Q=t(" Service Discovery "),D=e("p",null,[t("Applications consumes data from "),e("strong",null,"Fusion"),t(" services. The "),e("strong",null,"Framework"),t(" should dynamically resolve services from the host portal.")],-1),S=e("p",null,"Developers should easily configure which services the application needs and maintainers see which one are used.",-1),L=e("blockquote",null,[e("p",null,"developers should only name the service, then the framework resolves the endpoint and authentication requirements")],-1),N={class:"task-list-container"},B=a('<li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-9" checked="checked" disabled="disabled"><label class="task-list-item-label" for="task-item-9"> create a module which resolves <code>http</code> clients</label></li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-10" checked="checked" disabled="disabled"><label class="task-list-item-label" for="task-item-10"> tooling for <code>React</code></label></li>',2),E={class:"task-list-item"},M=e("input",{type:"checkbox",class:"task-list-item-checkbox",id:"task-item-11",checked:"checked",disabled:"disabled"},null,-1),P={class:"task-list-item-label",for:"task-item-11"},W=t("documentation"),G=a('<li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-12" disabled="disabled"><label class="task-list-item-label" for="task-item-12"> guide</label></li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-13" disabled="disabled"><label class="task-list-item-label" for="task-item-13"> cookbook</label></li>',2),I={id:"events",tabindex:"-1"},V=e("a",{class:"header-anchor",href:"#events","aria-hidden":"true"},"#",-1),j=t(" Events "),z=e("p",null,[t("Since modules are decoupled, the "),e("strong",null,"Framework"),t(" needs a bus to communicate on.")],-1),H=e("blockquote",null,[e("p",null,"Application can interact with events and prevent default behaviors")],-1),O={class:"task-list-container"},U=a('<li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-14" checked="checked" disabled="disabled"><label class="task-list-item-label" for="task-item-14"> create a module for consuming context</label></li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-15" checked="checked" disabled="disabled"><label class="task-list-item-label" for="task-item-15"> tooling for <code>React</code></label></li>',2),J={class:"task-list-item"},K=e("input",{type:"checkbox",class:"task-list-item-checkbox",id:"task-item-16",checked:"checked",disabled:"disabled"},null,-1),X={class:"task-list-item-label",for:"task-item-16"},Y=t("documentation"),Z=a('<li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-17" disabled="disabled"><label class="task-list-item-label" for="task-item-17"> guide</label></li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-18" disabled="disabled"><label class="task-list-item-label" for="task-item-18"> cookbook</label></li>',2),$={id:"context",tabindex:"-1"},ee=e("a",{class:"header-anchor",href:"#context","aria-hidden":"true"},"#",-1),te=t(" Context "),se=a('<p><strong>Fusion</strong> context is scoped data with user-friendly name and follows users throughout session.</p><p>Applications present the user with a interface related the to selected context.</p><p>The framework needs to facilitate query, filtering and selecting scoped data.</p><blockquote><p>The framework maintains the cache of context, aborts dangling request and throttles queries</p></blockquote><p><img src="https://img.shields.io/github/milestones/progress-percent/equinor/fusion-framework/1" alt="GitHub milestone"></p><ul class="task-list-container"><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-19" checked="checked" disabled="disabled"><label class="task-list-item-label" for="task-item-19"> create a module for consuming context</label></li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-20" disabled="disabled"><label class="task-list-item-label" for="task-item-20"> update context handling in <strong>Fusion Portal</strong></label></li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-21" checked="checked" disabled="disabled"><label class="task-list-item-label" for="task-item-21"><a href="../modules/services/context">documentation</a></label></li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-22" checked="checked" disabled="disabled"><label class="task-list-item-label" for="task-item-22"> tooling for <code>React</code></label></li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-23" disabled="disabled"><label class="task-list-item-label" for="task-item-23"> guide</label></li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-24" disabled="disabled"><label class="task-list-item-label" for="task-item-24"> cookbook</label></li></ul>',6),ie={id:"application-loading",tabindex:"-1"},ae=e("a",{class:"header-anchor",href:"#application-loading","aria-hidden":"true"},"#",-1),le=t(" Application Loading "),oe=a('<p><strong>Fusion</strong> provides metadata about registered applications and configuration for runtime environment. When loading an application the <strong>Framework</strong> resolves and provides this information, which the application uses to dynamically configure before rending.</p><p>The framework also keeps track of selected application and notifies when when current application changes.</p><ul class="task-list-container"><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-25" checked="checked" disabled="disabled"><label class="task-list-item-label" for="task-item-25"> load application and keep track of selected</label></li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-26" checked="checked" disabled="disabled"><label class="task-list-item-label" for="task-item-26"> tooling for <code>React</code></label></li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-27" disabled="disabled"><label class="task-list-item-label" for="task-item-27"> developer documentation</label></li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-28" disabled="disabled"><label class="task-list-item-label" for="task-item-28"> developer guide</label></li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-29" disabled="disabled"><label class="task-list-item-label" for="task-item-29"> cookbook for loading applications</label></li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-30" disabled="disabled"><label class="task-list-item-label" for="task-item-30"><em>track usage (awaiting new service)</em></label></li></ul>',3),ce={id:"bookmarks",tabindex:"-1"},ne=e("a",{class:"header-anchor",href:"#bookmarks","aria-hidden":"true"},"#",-1),de=t(" Bookmarks "),ke=a('<p>Bookmarks are snapshots of application states which users can navigate to and share with other Fusion users. The framework should facilitate functionality for storing and restoring bookmark.</p><ul class="task-list-container"><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-31" checked="checked" disabled="disabled"><label class="task-list-item-label" for="task-item-31"> configurable interface for storing and restoring bookmarks</label></li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-32" disabled="disabled"><label class="task-list-item-label" for="task-item-32"> tooling for <code>React</code></label></li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-33" disabled="disabled"><label class="task-list-item-label" for="task-item-33"> Cookbook for developing bookmarks</label></li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-34" disabled="disabled"><label class="task-list-item-label" for="task-item-34"> Developer documentation</label></li></ul>',2),re={id:"widgets",tabindex:"-1"},be=e("a",{class:"header-anchor",href:"#widgets","aria-hidden":"true"},"#",-1),he=t(" Widgets "),me=a('<p>Widgets are small applications which are uploaded to an global storage and consumed by portals and applications. The framework should manage loading metadata and configuration for the widget.</p><ul class="task-list-container"><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-35" disabled="disabled"><label class="task-list-item-label" for="task-item-35"> Load widget manifest and configuration</label></li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-36" disabled="disabled"><label class="task-list-item-label" for="task-item-36"> tooling for <code>React</code></label></li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-37" disabled="disabled"><label class="task-list-item-label" for="task-item-37"> Documentation</label></li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-38" disabled="disabled"><label class="task-list-item-label" for="task-item-38"> Guide</label></li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-39" disabled="disabled"><label class="task-list-item-label" for="task-item-39"> Cookbook</label></li></ul>',2),pe={id:"application-migration",tabindex:"-1"},ue=e("a",{class:"header-anchor",href:"#application-migration","aria-hidden":"true"},"#",-1),fe=t(" Application migration "),_e=a('<p><strong>Q4 2022</strong></p><p>Convert existing application to be compatible with dynamic loading and configuration of framework</p><ul class="task-list-container"><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-40" disabled="disabled"><label class="task-list-item-label" for="task-item-40"> create build template for building application</label></li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-41" disabled="disabled"><label class="task-list-item-label" for="task-item-41"> create a wrapper for emulating portal in development</label></li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-42" disabled="disabled"><label class="task-list-item-label" for="task-item-42"> create guide for making application compliant with <code>Fusion Framework</code></label></li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-43" disabled="disabled"><label class="task-list-item-label" for="task-item-43"> make Fusion Portal compliant with <code>React 18</code></label></li></ul><h1 id="not-planned-yet" tabindex="-1"><a class="header-anchor" href="#not-planned-yet" aria-hidden="true">#</a> Not planned yet</h1>',4),ge={id:"navigation",tabindex:"-1"},xe=e("a",{class:"header-anchor",href:"#navigation","aria-hidden":"true"},"#",-1),ye=t(" Navigation "),ve=a('<p>The <strong>Framework</strong> should provide functionality for applications and portals for navigating.</p><ul class="task-list-container"><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-44" disabled="disabled"><label class="task-list-item-label" for="task-item-44"> create functionality for building scoped urls</label></li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-45" disabled="disabled"><label class="task-list-item-label" for="task-item-45"> observe changes to routing</label></li></ul>',2),we={id:"tasks",tabindex:"-1"},Fe=e("a",{class:"header-anchor",href:"#tasks","aria-hidden":"true"},"#",-1),qe=t(" Tasks "),Te=e("p",null,"Exposes users Fusion tasks/actions",-1),Ce={id:"notification",tabindex:"-1"},Re=e("a",{class:"header-anchor",href:"#notification","aria-hidden":"true"},"#",-1),Ae=t(" Notification "),Qe=a('<p>Exposes users Fusion notifications</p><h2 id="telemetry" tabindex="-1"><a class="header-anchor" href="#telemetry" aria-hidden="true">#</a> Telemetry</h2><p>Observer events happening in the framework an log back to application insight</p><blockquote><p>This module exists but missing wiring and final touches</p></blockquote><ul class="task-list-container"><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-46" disabled="disabled"><label class="task-list-item-label" for="task-item-46"> subscribe to framework events</label></li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-47" disabled="disabled"><label class="task-list-item-label" for="task-item-47"> tooling for <code>React</code></label></li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-48" disabled="disabled"><label class="task-list-item-label" for="task-item-48"> Documentation</label></li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-49" disabled="disabled"><label class="task-list-item-label" for="task-item-49"> Guide</label></li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-50" disabled="disabled"><label class="task-list-item-label" for="task-item-50"> Cookbook</label></li></ul>',5),De={id:"service-messages",tabindex:"-1"},Se=e("a",{class:"header-anchor",href:"#service-messages","aria-hidden":"true"},"#",-1),Le=t(" Service Messages "),Ne=a('<p>Module for subscribing to <strong>Fusion</strong> service messages (SignalR)</p><ul class="task-list-container"><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-51" disabled="disabled"><label class="task-list-item-label" for="task-item-51"> tooling for <code>React</code></label></li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-52" disabled="disabled"><label class="task-list-item-label" for="task-item-52"> Documentation</label></li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-53" disabled="disabled"><label class="task-list-item-label" for="task-item-53"> Guide</label></li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-54" disabled="disabled"><label class="task-list-item-label" for="task-item-54"> Cookbook</label></li></ul>',2),Be={id:"person",tabindex:"-1"},Ee=e("a",{class:"header-anchor",href:"#person","aria-hidden":"true"},"#",-1),Me=t(" Person "),Pe=e("p",null,"Module for resolving persons (person-card, person-picker, person-avatar, person-availability)",-1),We={id:"application-cli",tabindex:"-1"},Ge=e("a",{class:"header-anchor",href:"#application-cli","aria-hidden":"true"},"#",-1),Ie=t(" Application CLI "),Ve=e("p",null,"Create a CLI for building and developing application",-1),je=e("div",{class:"custom-container warning"},[e("p",{class:"custom-container-title"},"Note"),e("p",null,"might be resolved by guide and cookbooks")],-1);function ze(He,Oe){const i=c("Badge"),l=c("RouterLink");return d(),k("div",null,[e("ul",null,[e("li",null,[s(i,{type:"tip",text:"Complete"})]),e("li",null,[s(i,{type:"warning",text:"Minimum viable product"})]),e("li",null,[s(i,{type:"info",text:"Active - Currently working on"})]),e("li",null,[s(i,{type:"note",text:"Planned - not started on"})])]),b,e("h2",h,[m,p,s(i,{type:"tip",text:"Q1 2022"})]),u,e("h2",f,[_,g,s(i,{type:"tip",text:"Q2 2022"})]),x,e("ul",y,[v,e("li",w,[F,e("label",q,[s(l,{to:"/modules/"},{default:o(()=>[T]),_:1})])]),C]),e("h2",R,[A,Q,s(i,{type:"warning",text:"Q2/Q3 2022"})]),D,S,L,e("ul",N,[B,e("li",E,[M,e("label",P,[s(l,{to:"/modules/service-discovery/"},{default:o(()=>[W]),_:1})])]),G]),e("h2",I,[V,j,s(i,{type:"warning",text:"Q3 2022"})]),z,H,e("ul",O,[U,e("li",J,[K,e("label",X,[s(l,{to:"/modules/event/"},{default:o(()=>[Y]),_:1})])]),Z]),e("h2",$,[ee,te,s(i,{type:"warning",text:"Q3 2022"})]),se,e("h2",ie,[ae,le,s(i,{type:"info",text:"Q4 2022"})]),oe,e("h2",ce,[ne,de,s(i,{type:"info",text:"Q4 2022"})]),ke,e("h2",re,[be,he,s(i,{type:"note",text:"Q4 2022"})]),me,e("h2",pe,[ue,fe,s(i,{type:"note",text:"Q4 2022"})]),_e,e("h2",ge,[xe,ye,s(i,{type:"warning",text:"need grooming"})]),ve,e("h2",we,[Fe,qe,s(i,{type:"warning",text:"need grooming"})]),Te,e("h2",Ce,[Re,Ae,s(i,{type:"warning",text:"need grooming"})]),Qe,e("h2",De,[Se,Le,s(i,{type:"warning",text:"need grooming"})]),Ne,e("h2",Be,[Ee,Me,s(i,{type:"warning",text:"need grooming"})]),Pe,e("h2",We,[Ge,Ie,s(i,{type:"warning",text:"need grooming"})]),Ve,je])}const Ke=n(r,[["render",ze],["__file","index.html.vue"]]);export{Ke as default};
