import{_ as l}from"./_plugin-vue_export-helper.cdc0426e.js";import{o as u,c as r,b as n,d as s,a,w as o,e as t,r as e}from"./app.bf7b4931.js";const k={},d=n("h2",{id:"requirement",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#requirement","aria-hidden":"true"},"#"),s(" Requirement")],-1),g={href:"https://reactjs.org/",target:"_blank",rel:"noopener noreferrer"},f=n("div",{class:"custom-container warning"},[n("p",{class:"custom-container-title"},"Dependencies"),n("p",null,"The Fusion Portal only supports React@17")],-1),m=n("h2",{id:"installation",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#installation","aria-hidden":"true"},"#"),s(" Installation")],-1),h=n("p",null,"install cli",-1),y=t(`<div class="language-bash" data-ext="sh"><pre class="language-bash"><code><span class="token function">yarn</span> <span class="token function">add</span> <span class="token parameter variable">--dev</span> <span class="token string">&#39;@equinor/fusion-framework-cli&#39;</span>
</code></pre></div><p>install framework</p>`,2),v=t(`<div class="language-bash" data-ext="sh"><pre class="language-bash"><code><span class="token function">yarn</span> <span class="token function">add</span> <span class="token parameter variable">--dev</span> <span class="token string">&#39;@equinor/fusion-framework-react-app&#39;</span>
</code></pre></div><h2 id="configuration" tabindex="-1"><a class="header-anchor" href="#configuration" aria-hidden="true">#</a> Configuration</h2><div class="language-typescript" data-ext="ts"><pre class="language-typescript"><code><span class="token doc-comment comment">/** config.ts */</span>
<span class="token keyword">import</span> <span class="token keyword">type</span> <span class="token punctuation">{</span> AppModuleInitiator <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@equinor/fusion-framework-react-app&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">export</span> <span class="token keyword">const</span> configure<span class="token operator">:</span> <span class="token function-variable function">AppModuleInitiator</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span>configurator<span class="token punctuation">,</span> <span class="token punctuation">{</span> fusion<span class="token punctuation">,</span> env <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token operator">...</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre></div><h3 id="application-config" tabindex="-1"><a class="header-anchor" href="#application-config" aria-hidden="true">#</a> Application Config</h3><p>When the application renders, the portal will load configuration from <code>app service</code></p><div class="language-typescript" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">configure</span> <span class="token operator">=</span> <span class="token punctuation">(</span>configurator<span class="token punctuation">,</span> <span class="token punctuation">{</span> env <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>

  <span class="token keyword">const</span> <span class="token punctuation">{</span> config<span class="token operator">:</span> <span class="token punctuation">{</span> services<span class="token punctuation">,</span> environment <span class="token punctuation">}</span> <span class="token punctuation">}</span> <span class="token operator">=</span> env<span class="token punctuation">;</span>
  <span class="token keyword">const</span> <span class="token punctuation">{</span> defaultScopes <span class="token punctuation">}</span> <span class="token operator">=</span> environment<span class="token punctuation">;</span>

  <span class="token keyword">for</span><span class="token punctuation">(</span> <span class="token keyword">const</span> <span class="token punctuation">[</span>key<span class="token punctuation">,</span> baseUri<span class="token punctuation">]</span> <span class="token keyword">in</span> Object<span class="token punctuation">.</span><span class="token function">entries</span><span class="token punctuation">(</span>services<span class="token punctuation">)</span> <span class="token punctuation">)</span><span class="token punctuation">{</span>
    configurator<span class="token punctuation">.</span><span class="token function">configureHttpClient</span><span class="token punctuation">(</span><span class="token punctuation">{</span> key<span class="token punctuation">,</span> <span class="token punctuation">{</span> baseUri<span class="token punctuation">,</span> defaultScopes <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre></div><div class="custom-container note"><p class="custom-container-title">Note</p><p>Soon the app config attribute for services will have an property for <code>defaultScopes</code></p></div><h3 id="service-http-clients" tabindex="-1"><a class="header-anchor" href="#service-http-clients" aria-hidden="true">#</a> Service http clients</h3>`,8),w=t(`<div class="language-typescript" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">configure</span> <span class="token operator">=</span> <span class="token punctuation">(</span>configurator<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token doc-comment comment">/** enable usage of fusion portal api service  */</span>
  <span class="token keyword">await</span> configurator<span class="token punctuation">.</span><span class="token function">useFrameworkServiceClient</span><span class="token punctuation">(</span><span class="token string">&#39;portal&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div><h3 id="context" tabindex="-1"><a class="header-anchor" href="#context" aria-hidden="true">#</a> Context</h3><div class="language-typescript" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> enableNavigation <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@equinor/fusion-framework-module-context&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">configure</span> <span class="token operator">=</span> <span class="token punctuation">(</span>configurator<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token function">enableContext</span><span class="token punctuation">(</span>configurator<span class="token punctuation">,</span> <span class="token punctuation">{</span>
    <span class="token doc-comment comment">/** optional filter for query types */</span>
    contextType<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;project&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token doc-comment comment">/** optional filter of query result */</span>
    <span class="token function-variable function">contextFilter</span><span class="token operator">:</span> <span class="token punctuation">(</span>items<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> items<span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span>item <span class="token operator">=&gt;</span> item<span class="token punctuation">.</span>title<span class="token punctuation">.</span><span class="token function">match</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">a</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">)</span><span class="token punctuation">)</span> 
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div><h3 id="navigation" tabindex="-1"><a class="header-anchor" href="#navigation" aria-hidden="true">#</a> Navigation</h3><p>Enable routing in application</p>`,5),x=t(`<div class="language-typescript" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> enableNavigation <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@equinor/fusion-framework-module-navigation&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">configure</span> <span class="token operator">=</span> <span class="token punctuation">(</span>configurator<span class="token punctuation">,</span> <span class="token punctuation">{</span> env<span class="token operator">:</span> <span class="token punctuation">{</span> basename <span class="token punctuation">}</span> <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token function">enableNavigation</span><span class="token punctuation">(</span>configurator<span class="token punctuation">,</span> basename<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div><h3 id="ag-grid" tabindex="-1"><a class="header-anchor" href="#ag-grid" aria-hidden="true">#</a> Ag Grid</h3><p>Enable license key when deployed to portal</p>`,3),b=t(`<div class="language-typescript" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> enableAgGrid <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@equinor/fusion-framework-module-navigation&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">configure</span> <span class="token operator">=</span> <span class="token punctuation">(</span>configurator<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token function">enableAgGrid</span><span class="token punctuation">(</span>configurator<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div><h2 id="component" tabindex="-1"><a class="header-anchor" href="#component" aria-hidden="true">#</a> Component</h2><div class="language-tsx" data-ext="tsx"><pre class="language-tsx"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> createRoot <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;react-dom/client&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> makeComponent<span class="token punctuation">,</span> ComponentRenderArgs <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@equinor/fusion-framework-react-app&#39;</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> configure <span class="token keyword">from</span> <span class="token string">&#39;./config&#39;</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> App <span class="token keyword">from</span> <span class="token string">&#39;./App&#39;</span><span class="token punctuation">;</span>

<span class="token comment">/** render callback function */</span>
<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function">renderApp</span> <span class="token punctuation">(</span>el<span class="token operator">:</span> HTMLElement<span class="token punctuation">,</span> args<span class="token operator">:</span> ComponentRenderArgs<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> root <span class="token operator">=</span> <span class="token function">createRoot</span><span class="token punctuation">(</span>el<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">/** make render component */</span>
    <span class="token keyword">const</span> Component <span class="token operator">=</span> <span class="token function">makeComponent</span><span class="token punctuation">(</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">App</span></span> <span class="token punctuation">/&gt;</span></span><span class="token punctuation">,</span> args<span class="token punctuation">,</span> configure<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">/** render app component */</span>
    root<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Component</span></span> <span class="token punctuation">/&gt;</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">/** teardown */</span>
    <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> root<span class="token punctuation">.</span><span class="token function">unmount</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> renderApp<span class="token punctuation">;</span>
</code></pre></div><div class="custom-container info"><p class="custom-container-title">legacy</p><div class="language-typescript" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> registerApp <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@equinor/fusion&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> createComponent <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@equinor/fusion-framework-react-app&#39;</span><span class="token punctuation">;</span>

<span class="token function">registerApp</span><span class="token punctuation">(</span>
  <span class="token string">&#39;my-app&#39;</span><span class="token punctuation">,</span> 
  <span class="token punctuation">{</span> 
    renderApp<span class="token punctuation">,</span>
    AppComponent<span class="token operator">:</span> <span class="token operator">&lt;</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span><span class="token operator">&gt;</span> 
  <span class="token punctuation">}</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div></div>`,4);function _(A,C){const i=e("ExternalLinkIcon"),c=e("ModuleBadge"),p=e("RouterLink");return u(),r("div",null,[d,n("ul",null,[n("li",null,[n("a",g,[s("React 17+"),a(i)])])]),f,m,h,a(c,{module:"cli"}),y,a(c,{module:"react-app"}),v,n("p",null,[a(p,{to:"/modules/service-discovery/"},{default:o(()=>[s("see available services")]),_:1})]),n("p",null,[a(p,{to:"/modules/http/"},{default:o(()=>[s("see http module")]),_:1})]),w,n("p",null,[a(p,{to:"/modules/navigation/"},{default:o(()=>[s("read more about navigation")]),_:1})]),x,n("p",null,[a(p,{to:"/modules/ag-grid/"},{default:o(()=>[s("read more about Ag Grid")]),_:1})]),b])}const R=l(k,[["render",_],["__file","getting-started.html.vue"]]);export{R as default};
